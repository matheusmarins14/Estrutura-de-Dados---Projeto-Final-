import networkx as nx #Biblioteca para montagem do grafo
import matplotlib.pyplot as plt #Biblioteca para plotagem do grafo e facilitar vizualização

#Criar um grafo vazio
grafo = nx.Graph()

#Adicionar vértices
grafo.add_node('A')
grafo.add_node('B')
grafo.add_node('C')
grafo.add_node('D')
grafo.add_node('E')
grafo.add_node('F')

#Adicionar arestas
grafo.add_edge('B', 'A')
grafo.add_edge('C', 'A')
grafo.add_edge('D', 'A')
grafo.add_edge('E', 'A')
grafo.add_edge('F', 'C')
grafo.add_edge('C', 'B')
grafo.add_edge('C', 'D')
grafo.add_edge('C', 'E')

print('Grafo:')
plt.figure() #Plot do gráfico para visualização
nx.draw_networkx(grafo, pos=nx.spring_layout(grafo), with_labels=True)
plt.show()
print('Pontos e seus respectivos graus:')
for e in grafo.degree():#Iteração para apresentar os pontos e quantidade de conexões 
  print(e)
graus = [grafo.degree('A'), grafo.degree('B'), grafo.degree('C'), grafo.degree('D'), grafo.degree('E'), grafo.degree('F')] #Lista contendo a quantidade de conexão de cada ponto
print('Logo, o componente mais conectado é aquele que possui grau %d' %max(graus)) #Impressão do maior valor




